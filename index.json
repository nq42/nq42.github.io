[{"content":" What is Hugo # Hugo is a fast and modern static site generator written in Go, Hugo sites can be hosted anywhere, including Netlify, Heroku, GoDaddy, DreamHost, GitHub Pages, GitLab Pages, Surge, Firebase, Google Cloud Storage, Amazon S3, Rackspace, Azure, and CloudFront and work well with CDNs. For more information, check the official website here.\nWhat is GitHub Pages # GitHub Pages is a static site hosting service provided by GitHub. For more information, check the official website here.\nWhat is GitHub Actions # GitHub Actions automate your software workflows with CI/CD. It can build, test, and deploy your code right from GitHub. Check more details here.\nInstall Hugo onto your local machine # For Windows 10/11:\nYou can easily use download the binaries from latest release page.\nMove the executable to your desired directory.\nAdd this directory to the PATH environment variable.\nGo to Control Panel - System and Security - System - Advanced system settings:\nGo to terminal, and check if Hugo installation is successful. run hugo version, and you should see:\nFor other installation methods on Windows, MacOS, and Linux, check Hugo installation documentation here.\nFor the basic usage of Hugo CLI, check here.\nCreate Hugo site # Go to your working folder, and create your Hugo site by the command hugo new site your-site-name. ( For instance, my working folder is D:\\project. )\nThe tree view should be:\nyour-site-name ├─ archetypes # the templates of Markdown articles ├─ assets # files that Hugo Pipes needs to process ├─ content # website contents ├─ data # available data files when generating a website ├─ layouts # available templates when generating a website ├─ static # static files, such as pictures, videos, CSS, etc. ├─ themes # the hugo theme you choose └─ hugo.toml # configuration file Install Hugo theme # The Hugo community has numerous themes, Check them here. Normally, the theme documentation will give details about its installation and configuration.\nInstall using git\nEnsure you have Git installed on your local machine. Change into the directory for your Hugo website (that you created above), initialize a new git repository, and add your chosen theme as a submodule. Here we use the theme blowfish as an example.\ncd your-site-name git init git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish Install manually\nDownload the latest release of the theme source code from GitHub, extract the archive, rename the folder to the name of the theme (blowfish here), and move it to the themes/ directory inside your Hugo project’s root folder.\nNormally there is an exampleSite folder inside your themes/YourChosenTheme, which is a demo site of your chosen theme. You can copy this folder to your site folder, then do the configuration based on this example site. Check the configuration docs provided by the theme for more details. Remember to change the baseURL and chosen theme name in Hugo.toml.\nbaseURL = \u0026#34;https://\u0026lt;yourname\u0026gt;.github.io/\u0026#34; # the URL of your GitHub Pages repo. See below (Create GitHub repositories). theme = \u0026#34;YourChoosenTheme\u0026#34; Set up Favicons # Favicon, known as a shortcut icon, website icon, tab icon, URL icon, or bookmark icon, should be placed in the static/ folder as follows. You can generate them using favicon.io.\nstatic ├─ android-chrome-192x192.png ├─ android-chrome-512x512.png ├─ apple-touch-icon.png ├─ favicon-16x16.png ├─ favicon-32x32.png ├─ favicon.ico └─ site.webmanifest Create contents # You can create new folders in content folder. The tree view can be:\ncontent ├─ about.md ├─ posts | ├─ firstpost ├─ photo.jpg | | └─ index.md | └─ secondpost.md └─ projects ├─ first.md └─ second.md You can create .md files manually in the respective folder. Or use the command below to create a new article. This markdown file uses the template inside archetypes folder.\nhugo new content_type/content_name.md Local run, debug and publish # Use the command below to run locally. When successful, preview your website via http://localhost:1313.\nhugo server hugo command can generate the static Website in HTML stored in public folder by default. You can publish this static Website to your hosting server.\nhugo In order to build and publish the website automatically, we will use GitHub Pages and GitHub Action later.\nCreate GitHub repositories # Two repositories need to be created here. One is the source code repo, another is GitHub Pages repo.\nGitHub repo for source code\nThis repo can be private. You can make any name for this repo.\nUpload your local project to this repo:\ncd your-site-name git init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/yourname/myblog.git git push -u origin main GitHub pages repo\nThis repo is used to host the static HTML files (the files in the public folder generated by hugo command). The repo name must be \u0026lt;yourname\u0026gt;.github.io. \u0026lt;yourname\u0026gt; is the user name of your GitHub account. It must be public. Don\u0026rsquo;t forget to choose Add a README file, which will set main as the default branch.\nAutomatically deploy to GitHub Pages using GitHub Actions # In your site folder, create .github/workflow/gh-pages.yml. The tree view can be:\nyour-site-name ├─ .git ├─ .github │ └─ workflows │ └─ gh-pages.yml # create here ├─ archetypes ├─ assets ├─ content ├─ data ├─ layouts ├─ resources ├─ static ├─ themes └─ hugo.toml Below is the Sample configuration of gh-pages.yml:\nname: github pages # Take any name you want on: push: branches: - main # When push happens in main branch, run the jobs below jobs: deploy: runs-on: ubuntu-20.04\t# runtime environment steps: - uses: actions/checkout@v2\twith: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2\t# the action provided by Hugo with: hugo-version: \u0026#39;latest\u0026#39;\t# Fetch the latest version of Hugo extended: true - name: Build run: hugo --minify\t# Build the static website - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: external_repository: \u0026lt;yourname\u0026gt;.github.io # the repo you want to publish to personal_token: ${{ secrets.ACTION_ACCESS_TOKEN }}\t# Provide your personal access token publish_dir: ./public\t# the folder you want to publish. Hugo generates the static Website in `public` folder by default publish_branch: main\t# the branch of the repo above you want to publish to You need to get permission since you will push the GitHub Pages repo from the source code repo. Go to your GitHub account: Settings-Developer settings-personal access tokens, Create a Token here. Notice the name of the token should be the same as personal_token in gh-pages.yml above:\nCopy this generated Token (only show once), and go to your source code repo Settings - Secrets and variables - Actions-New repository secret:\nWhen finish all these configurations, push your code to your source code repo. It will trigger GitHub Action, generate the static websites, and push to your GitHub Pages repo automatically.\nThe update of GitHub Pages repo will trigger the CI deployment automatically. After 1-2 mins, you can check your website via https://\u0026lt;yourname\u0026gt;.github.io.\nSet up a custom domain # You can use your own domain for this GitHub Pages website.\nChange the baseURL to your own domain in Hugo.toml.\nbaseURL = \u0026#34;https://www.your-domain.com/\u0026#34; Change the URL in the GitHub Pages Repo, Settings - Pages\nNow, go to your domain host to configure DNS. Here I use Cloudflare as example. Add one CNAME record pointed to your GitHub Pages repo.\nThen go to Page Rules to add one rule for redirect. Page Rules - Create Page Rule:\nTill now everything is done. After you update your code, wait for several mins, you can visit your website via your own domain.\n","date":"7 September 2023","permalink":"/tech/3-create-a-blog-with-github-pages-and-hugo/","section":"Tech","summary":"What is Hugo # Hugo is a fast and modern static site generator written in Go, Hugo sites can be hosted anywhere, including Netlify, Heroku, GoDaddy, DreamHost, GitHub Pages, GitLab Pages, Surge, Firebase, Google Cloud Storage, Amazon S3, Rackspace, Azure, and CloudFront and work well with CDNs.","title":"How to create a blog/static website using Hugo, GitHub pages and GitHub Actions"},{"content":"","date":"7 September 2023","permalink":"/","section":"NQ","summary":"","title":"NQ"},{"content":"","date":"7 September 2023","permalink":"/tags/system/","section":"Tags","summary":"","title":"system"},{"content":"","date":"7 September 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"7 September 2023","permalink":"/tech/","section":"Tech","summary":"","title":"Tech"},{"content":"","date":"14 August 2023","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"We can use PuttyGen to do this. PuTTYgen is an key generator tool for creating SSH keys for PuTTY. Check more details about Putty here.\nClick Load (Load an existing private key file. You will be asked the password if your private key has):\nThen click Conversions - Export OpenSSH key:\nNow, you will get a .pem file as your key.\nIn addition, if you want to convert .pem to .ppk, just click Save private key after you Load your private kay.\n","date":"14 August 2023","permalink":"/tech/2-convert-a-.ppk-file-to-.pem-file/","section":"Tech","summary":"We can use PuttyGen to do this. PuTTYgen is an key generator tool for creating SSH keys for PuTTY. Check more details about Putty here.\nClick Load (Load an existing private key file.","title":"How to convert a .ppk file to .pem file"},{"content":"","date":"14 August 2023","permalink":"/authors/nq/","section":"Authors","summary":"","title":"nq"},{"content":"LXDE is a lightweight desktop environment for Linux. If you would like to have a graphical interface, especially on a low-budget VPS, LXDE is a good choice. For more details about LXDE, you can check its offical website here .\nWe use xrdp here to control the VPS remotely. Xrdp provides a graphical login to remote machines using RDP (Microsoft Remote Desktop Protocol). For more details about xrdp, you can check its offical website here .\nLogin your VPS as root # #Update the system\napt-get update apt-get upgrade #Install LXDE\napt-get -y install lxde #Install xrdp\napt-get -y install xrdp #Check if xrdp is running\nsystemctl status xrdp netstat -lptn | grep 3389 #change your password\npasswd Configure your firewall to allow remote connections # An RDP connection serves on TCP/IP port 3389. Below are ufw firewall commands.\n#Check if ufw is already installed\nufw version #Install ufw\napt install ufw #Check ufw status. ufw is disabled by default.\nufw status #Disable the firewall\nsystemctl stop ufw #Allow port 3389 (tcp/udp)\nsudo ufw allow 3389 #Deny port 3389 (tcp/udp)\nsudo ufw deny 3389 Now, you can use Microsoft Remote Desktop to control it remotely. ","date":"11 August 2023","permalink":"/tech/1-lxde-xrdp-vps-remotely/","section":"Tech","summary":"LXDE is a lightweight desktop environment for Linux. If you would like to have a graphical interface, especially on a low-budget VPS, LXDE is a good choice. For more details about LXDE, you can check its offical website here .","title":"How to install LXDE on Ubuntu/Debian and control your Linux VPS remotely using xrdp"},{"content":" Send a message ","date":"1 August 2023","permalink":"/contact/","section":"NQ","summary":" Send a message ","title":"Contact Me"},{"content":"anth\n","date":"1 January 0001","permalink":"/anth/","section":"Anthropology","summary":"anth","title":"Anthropology"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"life\n","date":"1 January 0001","permalink":"/life/","section":"Life","summary":"life","title":"Life"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"1 January 0001","permalink":"/tool/","section":"Tool","summary":"","title":"Tool"}]